version: '3.8'

services:
  # Spring Boot Application Service
  spring-app:
    build:
      context: .                      # Set the build context to the current directory
      dockerfile: Dockerfile          # Specify the Dockerfile name (default is Dockerfile)
    image: amenidrira/spring_app
    ports:
      - "8086:8086"                   # Map container port to host port
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/devops?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""   # Set your MySQL password here
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8086                # Specify server port
    depends_on:
      - mysql                          # Ensures MySQL starts before Spring Boot app
    networks:
      - app-network
    logging:
      driver: "json-file"             # Use json-file logging driver
      options:
        max-size: "10m"                # Maximum size of the log file
        max-file: "3"                   # Keep 3 rotated log files
        mode: "non-blocking"            # Prevent blocking writes

  # MySQL Database Service
  mysql:
    image: mysql:8.0                  # Use the desired MySQL version
    environment:
      MYSQL_ROOT_PASSWORD: ""          # Set your MySQL root password
      MYSQL_DATABASE: devops           # Database name
      MYSQL_USER: root                 # User name as per application.properties
      MYSQL_PASSWORD: ""                # Password for the MySQL user (set to "" if none)
    ports:
      - "3306:3306"                    # Expose MySQL to host if needed
    volumes:
      - mysql-data:/var/lib/mysql      # Persist MySQL data
    networks:
      - app-network
    logging:
      driver: "json-file"             # Use json-file logging driver
      options:
        max-size: "10m"                # Maximum size of the log file
        max-file: "3"                   # Keep 3 rotated log files
        mode: "non-blocking"            # Prevent blocking writes

# Define volumes for data persistence
volumes:
  mysql-data:

# Define a shared network for communication between services
networks:
  app-network: